% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tesseract.R
\name{ocr}
\alias{ocr}
\alias{tesseract}
\alias{ocr_data}
\title{Tesseract OCR}
\usage{
ocr(image, engine = tesseract("eng"), HOCR = FALSE)

ocr_data(image, engine = tesseract("eng"))

tesseract(language = NULL, datapath = NULL, configs = NULL,
  options = NULL, cache = TRUE)
}
\arguments{
\item{image}{file path, url, or raw vector to image (png, tiff, jpeg, etc)}

\item{engine}{a tesseract engine created with \code{tesseract()}}

\item{HOCR}{if \code{TRUE} return results as HOCR xml instead of plain text}

\item{language}{string with language for training data. Usually defaults to \code{eng}}

\item{datapath}{path with the training data for this language. Default uses
the system library.}

\item{configs}{character vector with files, each containing one or more parameter
values. These config files can exist in the current directory or one of the standard
tesseract config files that live in the tessdata directory. See details.}

\item{options}{a named list with tesseract parameters. See \code{\link[=tesseract_params]{tesseract_params()}}
for a list of supported options with description. See details.}

\item{cache}{use a cached version of engine if possible to speed up loading}
}
\description{
Extract text from an image. Requires that you have training data for the language you
are reading. Works best for images with high contrast, little noise and horizontal text.
}
\details{
The \code{ocr()} function returns plain text by default, or hOCR output if hOCR is set to \code{TRUE}.
The \code{ocr_data()} function returns a data frame with a confidence rate and bounding box for
each word in the text.

Tesseract \link[=tesseract_params]{control parameters} can be set either via a named list in the
\code{options} parameter, or in a \code{config} file text file which contains the parameter name
followed by a space and then the value, one per line. Use\code{\link[=tesseract_params]{tesseract_params()}} to list
supported parameters. Note that invalid parameters can sometimes cause a crash.
}
\examples{
# Simple example
text <- ocr("https://jeroen.github.io/images/testocr.png")
cat(text)

xml <- ocr("https://jeroen.github.io/images/testocr.png", HOCR = TRUE)
cat(xml)

df <- ocr_data("https://jeroen.github.io/images/testocr.png")
print(df)

\dontrun{
# Full roundtrip test: render PDF to image and OCR it back to text
curl::curl_download("https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf", "R-intro.pdf")
orig <- pdftools::pdf_text("R-intro.pdf")[1]

# Render pdf to png image
img_file <- pdftools::pdf_convert("R-intro.pdf", format = 'tiff', pages = 1, dpi = 400)

# Extract text from png image
text <- ocr(img_file)
unlink(img_file)
cat(text)
}

engine <- tesseract(options = list(tessedit_char_whitelist = "0123456789"))
}
\references{
\href{https://github.com/tesseract-ocr/tesseract/wiki/Data-Files}{Tesseract training data}
}
\seealso{
Other tesseract: \code{\link{tesseract_download}}
}
\concept{tesseract}
